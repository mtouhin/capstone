# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2.1

jobs:

  build:
    docker:
      # Use the same Docker base as the project
      - image: python:3.7.3-stretch
    
    working_directory: ~/repo
    
    steps:
      - checkout
  
     # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install
            # Install hadolint
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
            chmod +x /bin/hadolint
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      # run lint!
      - run:
          name: run lint
          command: |
            . venv/bin/activate
            make lint

  create_infrastructure:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - run:
          name: install dependencies
          command: |
            pip install --upgrade pip
            apk add --update tar gzip ansible nodejs npm curl python jq
            curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
            mv /tmp/eksctl /usr/local/bin           
            eksctl create cluster --name capstone --region=us-east-1
  
  cleanup:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - run:
          name: install dependencies
          command: |
            pip install --upgrade pip
            apk add --update tar gzip ansible nodejs npm curl python jq
            curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
            mv /tmp/eksctl /usr/local/bin
            eksctl delete nodegroup --cluster capstone --region=us-east-1
            eksctl delete cluster --name capstone --region=us-east-1
            aws cloudformation delete-stack --stack-name eks-capstone-cluster
            aws cloudformation delete-stack --stack-name eksctl-capstone-nodegroup*
        
      # Fail the job intentionally to simulate an error.
      # Uncomment the line below if you want to fail the current step
      # - run: return 1
      #- destroy_environment
  
workflows:
  my_workflow:
    jobs:
      - build
      #- create_infrastructure
      #- cleanup:
      #    requires: [create_infrastructure]